{"meta":{"title":"Kyle's Blog","subtitle":"","description":"","author":"Kyle Yang","url":"https://github.com/kyrie96521/kyrie96521.github.io","root":"/"},"pages":[{"title":"Tags","date":"2020-03-03T04:17:46.000Z","updated":"2020-03-04T00:44:53.835Z","comments":true,"path":"tags/index.html","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2020-03-03T08:30:00.000Z","updated":"2020-03-03T08:32:24.449Z","comments":true,"path":"about/index.html","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/about/index.html","excerpt":"","text":"! This is you"}],"posts":[{"title":"Css","slug":"3.3","date":"2020-03-03T01:57:48.000Z","updated":"2020-03-04T00:53:06.619Z","comments":true,"path":"2020/03/03/3.3/","link":"","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/2020/03/03/3.3/","excerpt":"","text":"css box model1.所有元素在 css 里都会是一个 box； margin 是该 box 与其他 box 的距离，而 padding 是该盒子边界与内容区的距离 2.当两个 box 相邻时，margin 会塌陷（重叠），选 box margin 大的那一个作为距离 3.box-sizing 属性：border-box，内容区宽度或高度会自动调整padding + border + 内容 width= 盒子的宽度padding+ border + 内容 height = 盒子的高度 css positioning1.postion： 默认是 static relative 允许对元素的位置进行操作 2.absolute：相对于上级元素（一般是父元素）进行偏移，即定位基点是父元素。条件是定位基点（一般是父元素）不能是 static 定位， 否则定位基点是 html。 3.fixed：相对于视口（viewport，浏览器窗口）进行偏移，即定位基点是浏览器窗口。这会导致元素的位置不随页面滚动而变化，好像固定在网页上一样。 4.sticky：一些时候是 relative 定位（定位基点是自身默认位置），另一些时候自动变成 fixed 定位（定位基点是视口） 摘自：阮一峰教程","categories":[],"tags":[{"name":"Daily juice","slug":"Daily-juice","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/tags/Daily-juice/"}]},{"title":"Redux","slug":"3.2","date":"2020-03-02T07:57:48.000Z","updated":"2020-03-04T00:53:04.197Z","comments":true,"path":"2020/03/02/3.2/","link":"","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/2020/03/02/3.2/","excerpt":"","text":"redux 中间件1.为什么要有中间件：目的是去处理一些在 redux 里的异步问题 store.dispath(action)是瞬时的，如果需要在 redux 里处理异步问题，则需要中间件来处理。 2.什么是中间件？（From Dan Abramov）It provides a third-party extension point between dispatching an action, and the moment it reaches the reducer. 3.实现一个异步功能的计数器？如果在 view 里有一个 button 的 onClick 事件，用户每次点击 button，则会触发 addOne action creator 并且可以 dispatch action；thunk 中间件允许我们 dispatch 出异步 function，它相比 reducers 是不纯净的；然后经过 thunk 中间件，再传递给 reducer 对 action 进行处理，生成全新的 state； 4.其与小点applyMiddlewares 作用是将所有中间件组成一个数组，依次执行，要注意中间件的次序；view 和 state 是一一对应的，当 state 变化，view 会被重新渲染；store.dispatch 方法会触发 Reducer 的自动执行；一个 action 可能经过不同的中间件，当 action 不需要再被处理时，中间件会进行自己的“熔断”机制；","categories":[],"tags":[{"name":"Daily juice","slug":"Daily-juice","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/tags/Daily-juice/"}]},{"title":"jQuery&Dom","slug":"3.1","date":"2020-03-01T10:47:28.000Z","updated":"2020-03-04T00:53:02.603Z","comments":true,"path":"2020/03/01/3.1/","link":"","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/2020/03/01/3.1/","excerpt":"","text":"主要复习了 DOM 操作以及 jQuery1.在 jQuery 里必须是对 jQuery 对象进行操作，所以对象需要被包裹在$(obj)里,比如$(this.obj) 2.事件冒泡可以形象地比喻为把一颗石头投入水中，泡泡会一直从水底冒出水面。事件会从最内层的元素开始发生，一直向上传播，直到 document 对象。即 child 事件先处理。但事件捕获(event capturing)与事件冒泡相反，事件会从最外层开始发生，直到最具体的元素。element.addEventListener(event, function, useCapture)true - 事件在捕获阶段执行false- 默认。事件在冒泡阶段执行 3.我们给一个 dom 同时绑定两个点击事件，一个用捕获，一个用冒泡，会执行几次事件，会先执行冒泡还是捕获？非目标元素捕获 -&gt; 目标元素代码顺序 -&gt; 非目标元素冒泡https://blog.csdn.net/moguzhale/article/details/53503044 4.阻止冒泡和取消默认事件event.stopPropagation()起到阻止捕获和冒泡阶段中当前事件的进一步传播。使用 event.preventDefault()可以取消默认事件https://www.jianshu.com/p/1fd066b4c0ba","categories":[],"tags":[{"name":"Daily juice","slug":"Daily-juice","permalink":"https://github.com/kyrie96521/kyrie96521.github.io/tags/Daily-juice/"}]}]}